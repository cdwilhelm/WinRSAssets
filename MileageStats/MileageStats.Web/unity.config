<unity>
  <typeAliases>
    <typeAlias alias="string" type="System.String, mscorlib" />
    <typeAlias alias="singleton" type="Microsoft.Practices.Unity.ContainerControlledLifetimeManager, Microsoft.Practices.Unity" />
    <typeAlias alias="perRequest" type="MileageStats.Web.UnityExtensions.UnityHttpContextPerRequestLifetimeManager, MileageStats.Web" />
  </typeAliases>
  <containers>
    <container name="container">
      <types>
        <type type="MileageStats.Domain.Contracts.ICountryServices, MileageStats.Domain" mapTo="MileageStats.Domain.CountryServices, MileageStats.Domain">
          <lifetime type="perRequest" />
        </type>
        <type type="MileageStats.Domain.Contracts.IUserServices, MileageStats.Domain" mapTo="MileageStats.Domain.UserServices, MileageStats.Domain">
          <lifetime type="perRequest" />
        </type>
        <type type="MileageStats.Domain.Contracts.IChartDataService, MileageStats.Domain" mapTo="MileageStats.Domain.ChartDataService, MileageStats.Domain">
          <lifetime type="perRequest" />
        </type>
        <type type="MileageStats.Data.IUnitOfWork, MileageStats.Data" mapTo="MileageStats.Data.SqlServer.MileageStatsDbContext, MileageStats.Data.SqlServer">
          <lifetime type="perRequest" />
        </type>
        <type type="MileageStats.Data.IRepositoryInitializer, MileageStats.Data" mapTo="MileageStats.Data.SqlServer.RepositoryInitializer, MileageStats.Data.SqlServer">
          <lifetime type="perRequest" />
        </type>
        <type type="MileageStats.Data.IUserRepository, MileageStats.Data" mapTo="MileageStats.Data.SqlServer.Repositories.UserRepository, MileageStats.Data.SqlServer">
          <lifetime type="perRequest" />
        </type>
        <type type="MileageStats.Data.ICountryRepository, MileageStats.Data" mapTo="MileageStats.Data.SqlServer.Repositories.CountryRepository, MileageStats.Data.SqlServer">
          <lifetime type="perRequest" />
        </type>
        <type type="MileageStats.Data.IVehicleRepository, MileageStats.Data" mapTo="MileageStats.Data.SqlServer.Repositories.VehicleRepository, MileageStats.Data.SqlServer">
          <lifetime type="perRequest" />
        </type>
        <type type="MileageStats.Data.IFillupRepository, MileageStats.Data" mapTo="MileageStats.Data.SqlServer.Repositories.FillupRepository, MileageStats.Data.SqlServer">
          <lifetime type="perRequest" />
        </type>
        <type type="MileageStats.Data.IReminderRepository, MileageStats.Data" mapTo="MileageStats.Data.SqlServer.Repositories.ReminderRepository, MileageStats.Data.SqlServer">
          <lifetime type="perRequest" />
        </type>
        <type type="MileageStats.Data.IVehiclePhotoRepository, MileageStats.Data" mapTo="MileageStats.Data.SqlServer.Repositories.VehiclePhotoRepository, MileageStats.Data.SqlServer">
          <lifetime type="perRequest" />
        </type>
        <type type="MileageStats.Data.IVehicleManufacturerRepository, MileageStats.Data" mapTo="MileageStats.Data.SqlServer.Repositories.VehicleManufacturerRepository, MileageStats.Data.SqlServer">
          <lifetime type="perRequest" />
        </type>
        <!-- NOTE: This is a real openId authentication mechanism -->
        <type type="MileageStats.Web.Authentication.IOpenIdRelyingParty, MileageStats.Web" mapTo="MileageStats.Web.Authentication.DefaultOpenIdRelyingParty, MileageStats.Web">
          <lifetime type="perRequest" />
        </type>
        <type type="MileageStats.Web.Authentication.IFormsAuthentication, MileageStats.Web" mapTo="MileageStats.Web.Authentication.DefaultFormsAuthentication, MileageStats.Web">
          <lifetime type="perRequest" />
        </type>
      </types>
    </container>
  </containers>
</unity>

